{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook/phonebookAction.js","redux/phonebook/phonebookOperations.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebookSelector.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","App.js","redux/phonebook/phonebookReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","addNewContactsSuccess","createAction","addNewContactsError","setContactsSuccess","setContactsError","handleChange","handleDeleteSuccess","handleDeleteError","axios","defaults","baseURL","connect","state","contacts","items","useState","name","setName","dispatch","useDispatch","number","setNumber","event","currentTarget","value","handleSubmit","term","isDuplicate","some","contact","toLowerCase","alert","newTodo","id","uuid","a","post","data","className","styles","form","onSubmit","evt","preventDefault","title","onChange","inputContact","type","pattern","required","placeholder","btn","getFilteredContacts","createSelector","filter","contactsList","filterValue","item","includes","ContactsListItem","textContent","onClick","delete","handleDelete","ContactsList","filteredItems","useSelector","ul","map","Filter","block","htmlFor","input","target","FilterContainer","App","useEffect","get","contactItemsReducer","createReducer","payload","_","filterReducer","phonesReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6804c14e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__3V2lr\",\"title\":\"Filter_title__1Mzn3\",\"input\":\"Filter_input__2ENIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__q6usd\",\"textContent\":\"ContactListItem_textContent__3WVWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2BZUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__s-t3n\",\"title\":\"ContactForm_title__XLU-1\",\"inputContact\":\"ContactForm_inputContact__3Z0Ak\",\"btn\":\"ContactForm_btn__jaX6b\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContactsRequest = createAction(\"contact/addNewContactsRequest\");\r\nconst addNewContactsSuccess = createAction(\"contact/addNewContactsSuccess\");\r\nconst addNewContactsError = createAction(\"contact/addNewContactsError\");\r\n\r\nconst setContactsRequest = createAction(\"contact/setContactsRequest\");\r\nconst setContactsSuccess = createAction(\"contact/setContactsSuccess\");\r\nconst setContactsError = createAction(\"contact/setContactsError\");\r\n\r\nconst handleChange = createAction(\"contact/handleChange\");\r\n\r\nconst handleDeleteRequest = createAction(\"contact/handleDeleteRequest\");\r\nconst handleDeleteSuccess = createAction(\"contact/handleDeleteSuccess\");\r\nconst handleDeleteError = createAction(\"contact/handleDeleteError\");\r\n\r\nexport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  setContactsRequest,\r\n  setContactsSuccess,\r\n  setContactsError,\r\n  handleChange,\r\n  handleDeleteRequest,\r\n  handleDeleteSuccess,\r\n  handleDeleteError,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  setContactsSuccess,\r\n  setContactsError,\r\n  handleDeleteSuccess,\r\n  handleDeleteError,\r\n} from \"./phonebookAction.js\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001/\";\r\n\r\nexport const addNewContact = (contact) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"contacts\", contact);\r\n    dispatch(addNewContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactsError(error));\r\n  }\r\n};\r\n\r\nexport const setContacts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(\"contacts\");\r\n    dispatch(setContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(setContactsError(error));\r\n  }\r\n};\r\n\r\nexport const handleDelete = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`contacts/${id}`);\r\n    dispatch(handleDeleteSuccess(id));\r\n  } catch (error) {\r\n    dispatch(handleDeleteError(error));\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { addNewContact } from \"../../redux/phonebook/phonebookOperations\";\r\n\r\nconst ContactForm = ({ contacts }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (term) => {\r\n    if (!term) {\r\n      alert(\"Поле не может быть пустым!\");\r\n      return;\r\n    }\r\n\r\n    const isDuplicate = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === term.name.toLowerCase()\r\n    );\r\n    if (isDuplicate) {\r\n      alert(\"Контакт: \" + term.name + \" уже существует \");\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: uuid(),\r\n      name: term.name,\r\n      number: term.number,\r\n    };\r\n\r\n    dispatch(addNewContact(newTodo));\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    handleSubmit({ name, number });\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={onSubmit}>\r\n        <span className={styles.title}>Name</span>\r\n        <input\r\n          onChange={handleChange}\r\n          className={styles.inputContact}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"имя:\"\r\n        />\r\n        <span className={styles.title}>Number</span>\r\n        <input\r\n          className={styles.inputContact}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"тел:\"\r\n        />\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const itemsSelector = (state) => state.contacts.items;\r\nexport const filterSelector = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [itemsSelector, filterSelector],\r\n\r\n  (contactsList, filterValue) => {\r\n    return contactsList.filter((item) =>\r\n      item.name.toLowerCase().includes(filterValue.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { handleDelete } from \"../../redux/phonebook/phonebookOperations\";\r\nimport styles from \"./ContactListItem.module.css\";\r\nconst ContactsListItem = ({ item }) => {\r\n  const { name, number, id } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleDelete = () => dispatch(handleDelete(id));\r\n\r\n  return (\r\n    <li>\r\n      <div className={styles.textContent}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button className={styles.btn} onClick={onHandleDelete}>\r\n          X\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebookSelector\";\r\nimport ContactsListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = () => {\r\n  const filteredItems = useSelector(getFilteredContacts);\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.ul}>\r\n        {filteredItems.map((item) => (\r\n          <ContactsListItem key={item.id} item={item} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const handleFilter = (evt) => {\r\n    const { value } = evt.target;\r\n    handleChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.block}>\r\n      <label className={styles.title} htmlFor=\"filter\">\r\n        Find contacts by name:\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className={styles.input}\r\n        onChange={handleFilter}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Filter from \"./Filter\";\r\nimport { handleChange } from \"../../redux/phonebook/phonebookAction\";\r\n\r\nconst FilterContainer = () => {\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleChange = (value) => dispatch(handleChange(value));\r\n\r\n  return <Filter filter={filter} handleChange={onHandleChange} />;\r\n};\r\n\r\nexport default FilterContainer;\r\n","import { useEffect } from \"react\";\r\nimport ContactForm from \"./components/ContactForm//ContactForm\";\r\nimport ContactsList from \"./components/ContactList/ContactList\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport FilterContainer from \"./components/Filter/FilterContainer\";\r\nimport { setContacts } from \"./redux/phonebook/phonebookOperations\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <div>\r\n        <FilterContainer />\r\n        <ContactsList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContactsSuccess,\r\n  handleChange,\r\n  handleDeleteSuccess,\r\n  setContactsSuccess,\r\n} from \"./phonebookAction\";\r\n\r\nexport const contactItemsReducer = createReducer([], {\r\n  [addNewContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [setContactsSuccess]: (_, { payload }) => payload,\r\n  [handleDeleteSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [handleChange]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonesReducer = combineReducers({\r\n  items: contactItemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default phonesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport phonesReducer from \"./phonebook/phonebookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonesReducer,\r\n});\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}